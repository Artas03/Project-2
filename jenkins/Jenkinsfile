pipeline {
    agent any
    environment {
        DOCKER_USERNAME = credentials('DOCKER_USERNAME')
        DOCKER_PASSWORD = credentials('DOCKER_PASSWORD')
        install = 'false'
        DATABASE_URI = credentials("DATABASE_URI")
    }
    stages {
        stage("Install requirements") {
            steps {
                script{
                    if (env.install == 'false'){
                    sh "bash jenkins/install-requirements.sh"
                    }
                }
            }
        }
        stage("Test") {
            steps {
                // pytest
                // run for each service
                // produce cov reports
                sh "bash jenkins/test.sh"
            }
        }
        stage("Build") {
            steps {
                // install docker and docker-compose
                // docker-compose build
                sh "docker-compose build"
            }
        }
        stage("Push") {
            steps {
                // docker-compose push
                sh "docker-compose push"
            }
        }
        stage("Config Management (Ansible)") {
            steps {
                // install ansible on the jenkins machine
                // ansible-playbook -i inventory.yaml playbook.yaml
                sh "cd ansible && ~/.local/bin/ansible-playbook -i inventory.yaml playbook.yaml"
            }
        }
        stage("Deploy") {
            steps {
                // create swarm
                // copy docker-compose.yaml over
                // ssh: docker stack deploy --compose-file docker-compose.yaml project2
                sh "bash jenkins/deploy.sh"
            }
        }
    }
}